// Generated by CoffeeScript 1.7.1
$( document ).ready( function() {
  var STAGE, bindNewClusters, canContinue, collapseAllClusters, disableWorkspace, 
Workspace, getUUID, updateHeights, updateStage, _allClustersHaveNames;

  STAGE = 1;
  currentMode = $('#mode').text();
  console.log('init:' + currentMode)
  if (currentMode == 'training') {
    $('.cluster-name').hide();
  }
  
  getUUID = function() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      var r, v;
      r = Math.random() * 16 | 0;
      v = c === 'x' ? r : r & 0x3 | 0x8;
      return v.toString(16);
    });
  };

  updateHeights = function() {
    var h, h2;
    h = $(window).height();
    h = h - $('.header').height() - 20;
    h2 = $('.pills-container').height();
    $('.workspace').css('height', h + 20);
    $('.clusters').css('height', h - h2);
    console.log(h);
    h = h - $('ul.nav.nav-tabs').height();
    console.log(h);
    $('.clips').css('height', h);
    $('.merger').css('height', h);
    return $('.showall').css('height', h);
    

  };
  //updates the stage
  updateStage = function() {
    //if (STAGE > 2) {
    //  return;
    //}
    $('.stage').hide();
    $('.stage-' + STAGE).show();
    $('.stage-' + STAGE).effect('highlight', {}, 750);
    if (STAGE === 2) {
      $('.clips-tab').effect('highlight', {
        color: 'orange'
      }, 500);
      $('.clusters').scrollTo(0, 250);
      $('.clips-tab').click();
      collapseAllClusters();
    }
    return updateHeights();
  };

  //checks to make sure that all clusters in stage one have names before
  //moving on to stage 2
  _allClustersHaveNames = function() {
    var input, inputs, name, names, _i, _len;
    inputs = $('.cluster input.cluster-name');
    names = [];
    for (_i = 0, _len = inputs.length; _i < _len; _i++) {
      input = inputs[_i];
      input = $(input);
      name = input.val().trim();
      if (name.length === 0) {
        alert('Please give each group a schema.');
        input.focus();
        return false;
      }
      //if (names.indexOf(name) >= 0) {
      //  alert('Please give each group unique names. Drag groups to the right to merge if necessary.');
      //  input.focus();
      //  return false;
      //}
      names.push(name);
    }
    return true;
    
    
  };

  canContinue = function() {
    var names;
    if (STAGE > 7) {
      console.log("ERROR");
      return false;
    }
    $('.clear-btn').click();
    if (STAGE === 1) {
      //return _allClustersHaveNames();
      return true;
    }
    if (STAGE === 2) {
      //names = _allClustersHaveNames();
      //if (!names) {
      //  return false;
      //}
      if ($('.clips .clip').size() > 0) { /* stage 2: makes sure all clips categorized */
        if (!$('.clips').hasClass('active')) {
          $('.clips-tab').click();
          $('.clips-tab').effect('highlight', {
            'color': 'orange'
          }, 750); /* highlights orange when dragged on top of  tabs */
        }
        alert('Please categorize all products on the left.');
        return false;
      } //ends the if more than 0 clips in the cluster
    }
    return true;
  };

  bindNewClusters = function(obj) {
    return obj.sortable({
      connectWith: '.clips, .cluster-clips',
      items: "> .clip.draggable",
      cursor: "move",
      helper: 'clone',
      appendTo: 'body',
      containment: 'window',
      zIndex: 9999999,
      receive: function(event, ui) {
        var cid, cluster, dx, dy, now, orig, raw_html;
        if (!$(this).parent().hasClass('create')) {
console.log('!!create mode');
          cluster = $(this).closest('.cluster');
          cid = ui.item.attr('data-cid');
          $(this).parent().find('.selector').append(' <i class="fa fa-circle-o dot draggable" data-cid="' + cid + '"></i>');
          $('.clusters').scrollTo(cluster, 100);
          $(this).parent().find('.selector .dot[data-cid="' + cid + '"]').click();
          orig = ui.originalPosition;
          now = ui.offset;
          dx = orig.left - now.left;
          dy = orig.top - now.top;
          if (Math.abs(dx) > Math.abs(dy)) {
            if (dx > 0) {
              ui.item.effect('slide', {
                direction: 'right'
              }, 200);
            } else {
              ui.item.effect('slide', {
                direction: 'left'
              }, 200);
            }
          } else {
            if (dy > 0) {
              ui.item.effect('slide', {
                direction: 'down'
              }, 200);
            } else {
              ui.item.effect('slide', {
                direction: 'up'
              }, 200);
            }
          }
          return setTimeout((function() {
            return cluster.effect('highlight', {}, 500);
          }), 150);
        } else {
          console.log('create mode');
          cid = ui.item.attr('data-cid');
          if(currentMode == 'training') {
            raw_html = "<div class=\"cluster\" id=\"" + (getUUID()) + "\">\n  <div class=\"blah\">\n	<span class=\"blah\">\n	  Select Clip:\n	</span>\n	<span class=\"selector\">\n	  <i class=\"fa fa-circle-o dot draggable\" data-cid=\"" + cid + "\"></i>\n	</span>\n	<a class=\"show-all\" src=\"#\"><i class=\"fa fa-angle-double-down\">Show all</i></a>\n	<i class=\"fa fa-arrows merge-handle pull-right\">\n	   </i>\n  </div>\n    <div class=\"cluster-clips ui-sortable\">\n	<div class=\"clip draggable\" data-cid=\"" + cid + "\">\n		" + (ui.item.html()) + "\n	</div>\n  </div>\n  <div class=\"footer\">\n  </div>\n</div>";
          } else {
            raw_html = "<div class=\"cluster\" id=\"" + (getUUID()) + "\">\n  <div class=\"blah\">\n	<span class=\"blah\">\n	  Select Clip:\n	</span>\n	<span class=\"selector\">\n	  <i class=\"fa fa-circle-o dot draggable\" data-cid=\"" + cid + "\"></i>\n	</span>\n	<a class=\"show-all\" src=\"#\"><i class=\"fa fa-angle-double-down\">Show all</i></a>\n	<i class=\"fa fa-arrows merge-handle pull-right\">\n	   </i>\n  </div>\n  <div class=\"input-group\">\n	<div class=\"span input-group-addon\">\n	  Cluster Name\n	</div>\n	<input class=\"form-control cluster-name\" type=\"text\">\n  </div>\n  <div class=\"cluster-clips ui-sortable\">\n	<div class=\"clip draggable\" data-cid=\"" + cid + "\">\n		" + (ui.item.html()) + "\n	</div>\n  </div>\n  <div class=\"footer\">\n  </div>\n</div>";
          }
          obj = $(raw_html);
          console.log(obj);
          obj = obj.insertBefore('.cluster:not(.trash):first()');
          bindNewClusters(obj.find('.cluster-clips'));
          obj.effect('slide', {
            direction: 'up'
          }, 200);
          obj.find('input').focus();
          return $(this).parent().find('.clip[data-cid="' + cid + '"]').remove();
        }
      },
      remove: function(event, ui) {
        var cid, clusterid, pill;
        cid = ui.item.attr('data-cid');
        clusterid = $(this).closest('.cluster').attr('id');
        $(this).parent().find('.selector .dot[data-cid="' + cid + '"]').remove();
        $(this).parent().find('.selector .dot:nth-child(1)').click();
        if ($(this).parent().find('.selector .dot').length === 0) {
          $(this).parent().remove();
          pill = $('.pills button[data-clusterid="' + clusterid + '"]');
          return pill.remove();
        }
      },
      start: function(event, ui) {
        $('.cluster-clips .clip').css('opacity', '0.35');
        $('.clips .clip').css('opacity', '0.75');
        return $('.clips').addClass('state-active');
      },
      stop: function(event, ui) {
        $('.cluster-clips .clip').css('opacity', '1.0');
        $('.clips .clip').css('opacity', '1.0');
        return $('.clips').removeClass('state-active');
      },
      over: function() {
        $(this).addClass('state-hover');
        return $(this).parent().addClass('state-hover');
      },
      out: function() {
        $(this).removeClass('state-hover');
        return $(this).parent().removeClass('state-hover');
      }
    });
  };
  //workspace is basically the stuff for stage 2
  //disableWorkspace = function() {
  //  $('.workspace').hide();
  //  $('.next-stage').hide(); //next-stage is the continue button of step 2
  //  $('.start-stage').show();
  //  //return $('.start-stage').show();
  //};
  //
  //enableWorkspace = function() {
  //  $('.workspace').show();
  //  $('.next-stage').show();
  //  $('.start-stage').hide();
  //};

  collapseAllClusters = function() {
    var clusters, _cluster, _dots, _i, _len, _results;
    clusters = $('.cluster:not(.trash,.create)');
    _results = [];
    for (_i = 0, _len = clusters.length; _i < _len; _i++) {
      _cluster = clusters[_i];
      _cluster = $(_cluster);
      _dots = _cluster.find('.dot');
      if (_dots.size() > 1 && _cluster.find('.fa-circle').size() > 1) {
        _results.push(_cluster.find('.dot:first()').click());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  collectData = function() {
    var bindings, cluster, clusters, dot, name, out, singletons, _i, _len;
    clusters = $('.clusters .cluster:not(.create,.trash)'); //select from entire page
    out = [];
    for (_i = 0, _len = clusters.length; _i < _len; _i++) {
      cluster = clusters[_i];
      cluster = $(cluster);
      bindings = (function() {
        var _j, _len1, _ref, _results;
        _ref = cluster.find('.dot:not(.draggable)'); //navigating through cluster
        _results = [];
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          dot = _ref[_j];
          _results.push($(dot).attr('data-cid')); //get value and adds to array
        }
        return _results;
      })();
      singletons = (function() {
        var _j, _len1, _ref, _results;
        _ref = cluster.find('.dot.draggable');
        _results = [];
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          dot = _ref[_j];
          _results.push($(dot).attr('data-cid'));
        }
        return _results;
      })();
      name = cluster.find('.cluster-name')
      if (name.length > 0) {
        name = name.val().trim();
      } else {
        name = "";  
      }
      out.push({
        name: name,
        bind: bindings,
        single: singletons //look up hash
      });
    }
    console.log(out);
    return out;
  };

  jQuery(function() {
    $('.workspace').hide();
    $('.stage-three').hide();
    $('.stage-four').hide();
    $('.stage-five').hide();
    $('.stage-six').hide();

  

    if (!jQuery('body').hasClass('v-option-manager-2')) {
      return;
    }
    bindNewClusters($('.cluster-clips'));
    updateStage();
    updateHeights();
    //disableWorkspace();
    $('.restart-hit').click(function() {
      if (confirm('Are you sure you want to restart the HIT? All progress will be lost.')) {
        return location.reload();
      }
    });
    $('.clip.draggable').live('mousedown', function(e) {
      if (!$('.clips').hasClass('active')) {
        $('.clips-tab').click();
        return $('.clips-tab').effect('highlight', {
          'color': 'orange'
        }, 750);
      }
    });
    $('.merge-handle').live('mousedown', function(e) {
      var cluster;
      cluster = $(this).parent().parent();
      if (cluster.find('.fa-circle').size() > 1) {
        return cluster.find('.dot:first()').click();
      }
    });
    $('.cluster-name').live('keyup', function(e) {
      var cluster, clusterid, name, pill;
      name = $(this).val().trim();
      cluster = $(this).closest('.cluster');
      clusterid = cluster.attr('id');
      pill = $('.pills button[data-clusterid="' + clusterid + '"]');
      if (pill.size() === 0) {
        pill = $('<button class="btn btn-default btn-xs scrollto" data-clusterid="' + clusterid + '" type="button">' + name + '</button>');
        $('.pills').append(pill);
      }
      pill.html(name);
      if (name === '' || $('.cluster#' + clusterid).size() === 0) {
        return pill.remove();
      }
    });
    $('.pills .scrolltop').click(function() {
      return $('.clusters').scrollTo(0, 150);
    });
    $('.pills .scrollto').live('click', function(e) {
      var cluster, clusterid;
      clusterid = $(this).attr('data-clusterid');
      cluster = $('.clusters .cluster#' + clusterid);
      $('.clusters').scrollTo(cluster, 150);
      return setTimeout((function() {
        return cluster.effect('highlight');
      }), 170);
    });
    $('.cluster-name').live('focus', function(e) {
      var cluster, dots, showall;
      if (STAGE !== 1) {
        return;
      }
      cluster = $(this).closest('.cluster');
      dots = cluster.find('.dot');
      if (dots.size() === 1) {
        return;
      }
      if (cluster.find('.fa-circle').size() === 1) {
        showall = $(cluster.find('.show-all')[0]);
        showall.click();
        return showall.effect('highlight', {
          color: 'orange'
        }, 500);
      }
    });
    $('.cluster-name').live('blur', function(e) {
      var cluster, clusterid, name, pill;
      name = $(this).val().trim();
      $(this).val(name);
      cluster = $(this).closest('.cluster');
      clusterid = cluster.attr('id');
      pill = $('.pills button[data-clusterid="' + clusterid + '"]');
      if (pill.size() !== 0) {
        return pill.effect('highlight', {
          color: 'orange'
        }, 500);
      }
    });
    $('.nav-tabs').tab('show');
    $('.merger-tab').click();
    $('.merger-tab').click(function() {
      $('#showall .loaded').attr('data-clusterid', '');
      return $('.showall-container').html('');
    });
    $('.show-all').live('click', function(e) {
      var cluster, dots;
      e.preventDefault;
      cluster = $(this).parent().parent();
      dots = cluster.find('.dot');
      if (dots.size() === 1) {
        return;
      }
      if (cluster.find('.fa-circle').size() === 1) {
        collapseAllClusters();
        cluster.find('.clip').css('display', 'block');
        dots.removeClass('fa-circle-o');
        dots.addClass('fa-circle');
        cluster.find('.footer').html('<a class="show-all" href="#"><i class="fa fa-angle-double-up">Collapse</i></a>');
        $(this).html('<i class="fa fa-angle-double-up">Collapse</i>');
      } else {
        cluster.find('.dot:first()').click();
        $(this).html('<i class="fa fa-angle-double-down">Show all</i>');
      }
      return $('.clusters').scrollTo(cluster, 75);
    });
    $('.dot').live('click', function(e) {
      var cid;
      e.preventDefault;
      console.log('dot clicked');
      $(this).closest('.cluster').find('.show-all').html('<i class="fa fa-angle-double-down">Show all</i>');
      $(this).closest('.cluster').find('.footer').html('');
      $(this).parent().children('.dot').removeClass('fa-circle');
      $(this).parent().children('.dot').addClass('fa-circle-o');
      $(this).removeClass('fa-circle-o');
      $(this).addClass('fa-circle');
      cid = $(this).attr('data-cid');
      $(this).parent().parent().parent().find('.cluster-clips .clip').hide();
      return $(this).parent().parent().parent().find('.cluster-clips .clip[data-cid="' + cid + '"]').show();
    });
    $('.dot:nth-child(1)').click();
    $('.clips').sortable({
      connectWith: '.cluster-clips',
      items: "> .clip.draggable",
      appendTo: 'body',
      cursor: "move",
      helper: 'clone',
      containment: 'window',
      zIndex: 9999999,
      opacity: 0.6,
      start: function(event, ui) {
        return $('.cluster-clips .clip').css('opacity', '0.35');
      },
      stop: function(event, ui) {
        return $('.cluster-clips .clip').css('opacity', '1.0');
      },
      receive: function(event, ui) {
        return ui.item.effect('slide', {}, 200);
      }
    });
    $('.clusters').sortable({
      connectWith: '.merge-placeholder',
      handle: '.merge-handle',
      items: "> .cluster:not(.trash,.create)",
      cursor: 'move',
      helper: 'clone',
      containment: 'body',
      appendTo: 'body',
      zIndex: 9999999,
      opacity: 0.6,
      scroll: false,
      start: function(event, ui) {
        if (!$('.merger-tab').parent().hasClass('active')) {
          $('.merger-tab').effect('highlight', {
            'color': 'orange'
          }, 750);
          return $('.merger-tab').click();
        }
      }
    });
    $('.merge-placeholder').droppable({
      accept: '.cluster',
      cursor: "move",
      zIndex: 9999999,
      activeClass: 'state-active',
      hoverClass: "state-hover",
      drop: function(ev, ui) {
        var clone, current;
        console.log(ui.draggable);
        console.log($(this).parent());
        console.log($(this).parent().find('.cluster-container'));
        clone = ui.draggable.clone();
        current = $(this).parent().find('.cluster-container .cluster');
        if (current !== []) {
          console.log(current);
          $('.clusters #' + current.attr('id')).removeClass('gone');
        }
        $(this).parent().find('.cluster-container').html(clone);
        clone.css('display', 'block');
        ui.draggable.addClass('gone');
        $(this).parent().find('.background').addClass('gone');
        $(this).parent().css('height', clone.height());
        $(this).parent().find('.merge-placeholder').css('height', clone.height() + 22);
        clone.find('input').attr('readonly', 'readonly');
        return clone.find('input').attr('disabled', 'disabled');
      }
    });
    $('.clips-tab, .clear-btn').click(function() {
      $('.clusters .cluster.gone').removeClass('gone');
      $('.merger .background').removeClass('gone');
      $('.merger .background').css('height', '');
      $('.merger .merge-placeholder').css('height', '');
      $('.merger .merger-wrapper').css('height', '');
      return $('.merger .cluster-container').html('');
    });
    //the merge-btn is needed so that not everything is put in the first page for some reason
    $('.merge-btn').click(function() {
      var clusters, pill, source, target;
      clusters = $('.merger .cluster');
      if (clusters.size() !== 2) {
        alert('Please select 2 clusters from the left pane to merge');
        return;
      }
      target = $(clusters[0]);
      source = $(clusters[1]);
      target.find('.selector').append(' ');
      target.find('.selector').append(source.find('.selector .dot'));
      target.find('.cluster-clips').append(source.find('.cluster-clips .clip'));
      target.find('.dot:first()').click();
      $('.clusters #' + source.attr('id')).remove();
      $('.clusters #' + target.attr('id')).remove();
      $('.clusters').scrollTop(0);
      target.find('input').removeAttr('readonly');
      target.find('input').removeAttr('disabled');
      target = target.insertAfter('.cluster.create');
      target.effect('slide', {
        direction: 'up'
      }, 200);
      target.effect('highlight');
      bindNewClusters(target.find('.cluster-clips'));
      pill = $('.pills button[data-clusterid="' + source.attr('id') + '"]');
      pill.remove();
      return $('.clear-btn').click();
    });
    
    
    
    //$('.start-stage').click(function(e) { //start-stage is the first continue button
      //$('.row.stage-1').hide();
      //$('.row2').hide();
      //e.preventDefault();
      //$('.workspace').show();
      //$('.workspace').unblock();
      //return enableWorkspace();
 
    //});
    
    
    return $('.next-stage').click(function(e) { //next-stage is the second continue button
      if (STAGE==1) {
        console.log(currentMode)
          $('.row.stage-1').hide();
          $('.row2').hide();
          $('.cluster').hide();
          $('.workspace').show()
          console.log('show workspace')
      } //end stage 1
    
      var clusters, trainingClusters, url;
      e.preventDefault();
      if (!canContinue()) {
        return;
      }
      
      if (STAGE==2) {
        $('.workspace').hide();
        $('.stage-three').show();
          if (currentMode == 'training') {
            $('.stage-three').show();
          } else {
            $('.stage-six').show();
          }
      } //end stage 2
      
      
      if (STAGE==3) {
          $('.stage-three').hide();
      } //end stage 3
       
      
      STAGE += 1;
      console.log('current stage is ' + STAGE);
      
      if (STAGE>3) {
        if (currentMode == 'training') {
          //clusters = {};
          trainingClusters = collectData();
          console.log(trainingClusters)
          trainingClusters = JSON.stringify(trainingClusters);
          console.log(trainingClusters)
          url = '/feedback/training?labels=' + trainingClusters;
          //url that clusters are sent to; after ? the parameter
          console.log(url);
          window.location = url;
          //window.location = "/chocolate";
        } else { //mode is not training
          clusters = collectData(); //going through content of page and what user changed
          clusters = JSON.stringify(clusters); //so that it could be sent to back-end
          url = '/feedback/question/123/option_manager2?labels=' + clusters; /*+ '&' + aws_params*/ //will need for posting on amazon
          //url that clusters are sent to; after ? the parameter
          console.log(url);
          window.location = url;
        }
        
      } //end stage 3
      
      updateStage();
      //return disableWorkspace();
    });
  }); //end of JQuery function

})
